package org.usp.dropbox.bundles;

import java.util.*;
import java.text.*;
import org.usp.dropbox.config.*;

public class ViewHelper implements Default {

	public static String getDirectoryEntry(int inode, String name) {
		ResourceBundle rb = ResourceBundle.getBundle("org.usp.dropbox.bundles.view");
		StringBuffer buffer = new StringBuffer("");
		MessageFormat formatter = new MessageFormat("");
		Object[] parameters = null;

		if (inode != -1) {
			buffer.append(rb.getString("STARTTAG"));
			if (!name.equals("..")) {
				parameters = new Object[] { new Integer(inode), new Integer(104) };
				formatter.applyPattern(
						rb.getString("RADIO"));
				buffer.append(formatter.format(parameters));
			}

			parameters = new Object[] { "images/close.png" };
			formatter.applyPattern(rb.getString("IMAGE"));
			buffer.append(formatter.format(parameters));
			
			parameters = new Object[] { new Integer(inode), name };
			formatter.applyPattern(rb.getString("PARENT"));
			buffer.append(formatter.format(parameters));

			buffer.append(rb.getString("ENDTAG"));
		}

		return buffer.toString();
	}


	public static String getDropFileEntry(int iparent, int inode, String name, String mimeType) {
		ResourceBundle rb = 
			ResourceBundle.getBundle(
				"org.usp.dropbox.bundles.view");
		StringBuffer buffer = new StringBuffer("");
		MessageFormat formatter = new MessageFormat("");
		Object[] parameters = null;

		buffer.append(rb.getString("STARTTAG"));

		parameters = new Object[] { 
			new Integer(inode), new Integer(102) };
		formatter.applyPattern(rb.getString("RADIO"));
		buffer.append(formatter.format(parameters));

		if (mimeType.equals("application/x-pdf")
			|| mimeType.equals("application/pdf")) {
			parameters = new Object[] { "images/pdf.gif" };
		} else if (mimeType.equals("application/x-mpg")
			|| mimeType.equals("application/mpg")
			|| mimeType.equals("application/x-audio")
			|| mimeType.equals("application/mov")) {
			parameters = new Object[] { "images/movie.gif" };
		} else if (mimeType.equals("image/jpg") 
			|| mimeType.equals("image/png") 
			|| mimeType.equals("image/gif")) {
			parameters = new Object[] { "images/image.png" };
		} else {
			parameters = new Object[] { "images/file.png" };
		}

		formatter.applyPattern(rb.getString("IMAGE"));
		buffer.append(formatter.format(parameters));

		parameters = new Object[] { 
			new Integer(iparent), 
			    new Integer(inode), 
			    name};
		formatter.applyPattern(rb.getString("FILELINK"));
		buffer.append(formatter.format(parameters));

		buffer.append(rb.getString("ENDTAG"));

		return buffer.toString();
	}
}
